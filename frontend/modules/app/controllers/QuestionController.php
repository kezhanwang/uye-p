<?php
/**
 * Created by PhpStorm.
 * User: wangyi
 * Date: 2017/10/12
 * Time: 下午7:41
 */

namespace app\modules\app\controllers;


use app\modules\app\components\AppController;
use common\models\ar\UyeConfig;
use common\models\ar\UyeUserQuestion;
use components\Output;
use components\RedisUtil;
use components\UException;
use frontend\models\DataBus;

class QuestionController extends AppController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
//        if ($this->isMobile) {
//            $this->checkLogin();
//        } else {
//            $this->checkLogin(true);
//        }
    }

    public function actions()
    {
        return [
            'submit' => [
                'class' => 'app\modules\app\actions\QuestionAction'
            ],
        ];
    }

    public function actionConfig()
    {
        try {
            $request = \Yii::$app->request;
            $org_id = $request->isPost ? $request->post('org_id') : $request->get('org_id');
            if (empty($org_id)) {
                throw new UException(ERROR_SYS_PARAMS_CONTENT, ERROR_SYS_PARAMS);
            }
            //根据机构id和用户uid检查是否填写过
            $uid = DataBus::get('uid');
            $userQuestion = UyeUserQuestion::find()->select('*')->where('uid=:uid AND org_id=:org_id', [':uid' => $uid, 'org_id' => $org_id])->asArray()->one();
            if (empty($userQuestion)) {
                $redis = RedisUtil::getInstance();
                $redisKey = 'UYE-QUESTION-CONFIG';
                $data = $redis->get($redisKey);
                if ($data) {
                    $data = json_decode($data, true);
                } else {
                    $config = UyeConfig::find()->select('value')->where('name=:name', [':name' => 'question'])->asArray()->one();
                    if ($config) {
                        $data = json_decode($config['value'], true);
                    } else {
                        $data = [
                            [
                                'id' => 1,
                                'question' => '你为什么参加培训？',
                                'type' => 1,
                                'answer' => ['找工作', '找工作', '找工作', '其他']
                            ],
                            [
                                'id' => 2,
                                'question' => '你为什么参加培训？',
                                'type' => 2,
                                'answer' => ['找工作', '找工作', '找工作', '其他']
                            ]
                        ];
                        UyeConfig::_addConfig(['name' => 'question', 'label' => '问卷', 'value' => json_encode($data)]);
                    }
                    $redis->set($redisKey, json_encode($data));
                }
                $needQuestion = true;
            } else {
                $needQuestion = false;
                $data = [];
            }
            $templateData = [
                'need_question' => $needQuestion,
                'questions' => $data,
            ];
            Output::info(SUCCESS, SUCCESS_CONTENT, $templateData);
        } catch (UException $exception) {
            Output::err($exception->getCode(), $exception->getMessage(), [], DataBus::get('uid'));
        }
    }
}