<?php
/**
 * Created by PhpStorm.
 * User: wangyi
 * Date: 2017/10/18
 * Time: 下午2:05
 */

namespace app\modules\app\actions;


use app\modules\app\components\AppAction;
use common\models\ar\UyeInsuredOrder;
use common\models\ar\UyeOrg;
use common\models\ar\UyeOrgCourse;
use common\models\ar\UyeOrgInfo;
use components\Output;
use components\PicUtil;
use components\UException;
use frontend\models\DataBus;

class OrderAction extends AppAction
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->checkLogin();
    }

    public function run()
    {
        try {
            $page = $this->getParams('page', 1);
            $data = $this->getInsuredOrder($page);
            Output::info(SUCCESS, SUCCESS_CONTENT, $data);
        } catch (UException $exception) {
            Output::err($exception->getCode(), $exception->getMessage());
        }
    }

    private function getInsuredOrder($page = 1)
    {
        try {
            $fields = "io.*,o.org_name,oc.name as c_name,oi.logo";
            $insuredOrder = UyeInsuredOrder::find()
                ->select($fields)
                ->from(UyeInsuredOrder::TABLE_NAME . " io")
                ->leftJoin(UyeOrg::TABLE_NAME . " o", "o.id=io.org_id")
                ->leftJoin(UyeOrgInfo::TABLE_NAME . " oi", "oi.org_id=io.org_id")
                ->leftJoin(UyeOrgCourse::TABLE_NAME . " oc", "oc.id=io.c_id")
                ->where('io.uid=:uid', [':uid' => $this->uid])
                ->orderBy('id desc')
                ->limit(1)
                ->offset(($page - 1))
                ->asArray()->one();

            $count = UyeInsuredOrder::find()
                ->select("COUNT(io.id) AS count")
                ->from(UyeInsuredOrder::TABLE_NAME . " io")
                ->leftJoin(UyeOrg::TABLE_NAME . " o", "o.id=io.org_id")
                ->leftJoin(UyeOrgInfo::TABLE_NAME . " oi", "oi.org_id=io.org_id")
                ->leftJoin(UyeOrgCourse::TABLE_NAME . " oc", "oc.id=io.c_id")
                ->where('io.uid=:uid', [':uid' => $this->uid])
                ->asArray()->one();

            $getPageArr = [
                'totalCount' => $count['count'],
                'totalPage' => $count['count'],
                'page' => $page,
                'pageSize' => 1
            ];

            if ($insuredOrder) {
                $result = [
                    'insured_id' => $insuredOrder['id'],
                    'insured_order' => $insuredOrder['insured_order'],
                    'insured_status' => $insuredOrder['insured_status'],
                    'insured_status_desp' => UyeInsuredOrder::getInsuredStatusDesp($insuredOrder['insured_status']),
                    'org_name' => $insuredOrder['org_name'],
                    'insured_type' => UyeInsuredOrder::$insuredType[$insuredOrder['insured_type']],
                    'tuition' => $insuredOrder['tuition'],
                    'remark' => $insuredOrder['remark'],
                    'premium_amount_top' => $insuredOrder['pay_ceiling'],
                    'career_time' => '',
                    'repay_time' => '',
                    'org_logo' => PicUtil::getUrl($insuredOrder['logo']),
                    'train' => [
                        'first_train' => $insuredOrder['class_start'] . "~" . $insuredOrder['class_end'],
                        'second_train' => '',
                        'end_train' => '',
                    ]
                ];
            } else {
                $result = [];
            }

            return [
                'page' => $getPageArr,
                'insured_order' => $result
            ];
        } catch (UException $exception) {
            \Yii::error($exception->getMessage());
        }
    }
}